const mongoose = require('mongoose')
const Schema = mongoose.Schema

const schema = new Schema(
  {
    account: { type: Schema.Types.ObjectId, ref: 'Account' },
    name: { type: String, default: '' },
    memory: { type: String, default: '' },
    staff: { type: Schema.Types.ObjectId, ref: 'Staff' },
    chair: { type: Schema.Types.ObjectId, ref: 'Chair' },
    name_d1: { type: String, default: '' },
    name_d2: { type: String, default: '' },
    name_h1: { type: String, default: '' },
    name_h2: { type: String, default: '' },
    name_a1: { type: String, default: '' },
    name_a2: { type: String, default: '' },
    chair_height_a1: { type: Number, default: 0 },
    chair_angle_a1: { type: Number, default: 0 },
    chair_tilt_a1: { type: Number, default: 0 },
    chair_height_m1: { type: Number, default: 0 },
    chair_angle_m1: { type: Number, default: 0 },
    chair_tilt_m1: { type: Number, default: 0 },
    chair_height_m2: { type: Number, default: 0 },
    chair_angle_m2: { type: Number, default: 0 },
    chair_tilt_m2: { type: Number, default: 0 },
    turbine_X_light: {
      type: String,
      enum: ['on', 'off'],
      default: 'on',
    },
    turbine_X_spray: { type: String, enum: ['on', 'off', 'foot'], default: 'on' },
    motor_X_light: { type: String, enum: ['on', 'off'], default: 'on' },
    motor_X_spray: { type: String, enum: ['on', 'off', 'foot, blow'], default: 'on' },
    motor_X_motion: { type: String, default: '' },
    motor_X_free_mode: { type: String, enum: ['hight', 'low'], default: 'hight' },
    motor_X_mode_m1: { type: String, enum: ['hight', 'low'], default: 'hight' },
    motor_X_speed_m1: { type: Number, default: 0 },
    motor_X_mode_m2: { type: String, enum: ['hight', 'low'], default: 'hight' },
    motor_X_speed_m2: { type: Number, default: 0 },
    motor_X_mode_m3: { type: String, enum: ['hight', 'low'], default: 'hight' },
    motor_X_speed_m3: { type: Number, default: 0 },
    motor_X_torque_low: { type: Number, default: 0 },
    enac_X_light: { type: String, enum: ['on', 'off'], default: 'on' },
    enac_X_spray: { type: String, enum: ['on', 'off', 'foot'], default: 'on' },
    enac_X_motion: { type: String, enum: ['free', 'm1', 'm2', 'm3'], default: 'free' },
    enac_X_free: {
      type: String,
      enum: [
        '0.1',
        '0.5',
        '1.0',
        '1.5',
        '2.0',
        '2.5',
        '3.0',
        '3.5',
        '4.0',
        '4.5',
        '5.0',
        '5.5',
        '6.0',
        '6.5',
        '7.0',
        '8.0',
        '9.0',
        '10.0',
      ],
      default: '0.1',
    },
    enac_X_m1: {
      type: String,
      enum: [
        '0.1',
        '0.5',
        '1.0',
        '1.5',
        '2.0',
        '2.5',
        '3.0',
        '3.5',
        '4.0',
        '4.5',
        '5.0',
        '5.5',
        '6.0',
        '6.5',
        '7.0',
        '8.0',
        '9.0',
        '10.0',
      ],
      default: '0.1',
    },
    enac_X_m2: {
      type: String,
      enum: [
        '0.1',
        '0.5',
        '1.0',
        '1.5',
        '2.0',
        '2.5',
        '3.0',
        '3.5',
        '4.0',
        '4.5',
        '5.0',
        '5.5',
        '6.0',
        '6.5',
        '7.0',
        '8.0',
        '9.0',
        '10.0',
      ],
      default: '0.1',
    },
    enac_X_m3: {
      type: String,
      enum: [
        '0.1',
        '0.5',
        '1.0',
        '1.5',
        '2.0',
        '2.5',
        '3.0',
        '3.5',
        '4.0',
        '4.5',
        '5.0',
        '5.5',
        '6.0',
        '6.5',
        '7.0',
        '8.0',
        '9.0',
        '10.0',
      ],
      default: '0.1',
    },
    headrest_angle: { type: Number, default: 0 },
    chair_action_Initial: { type: String, enum: ['treatment', 'gargle'], default: 'treatment' },
    turbine_afcs: { type: Number, default: 0 },
    turbine_return_spray: { type: String, enum: ['on', 'off'], default: 'on' },
    turbine_return_light: { type: String, enum: ['on', 'off'], default: 'on' },
    motor_return_memory: { type: String, enum: ['last_memory', 'free'], default: 'last_memory' },
    motor_return_spray: { type: String, enum: ['on', 'off'], default: 'on' },
    motor_return_light: { type: String, enum: ['on', 'off'], default: 'on' },
    motor_rotate_characteristic: { type: String, enum: ['linear', 'slow'], default: 'linear' },
    enac_return_spray: { type: String, enum: ['on', 'off'], default: 'on' },
    enac_return_light: { type: String, enum: ['on', 'off'], default: 'on' },
    extraoralvacuum_Interlock: { type: String, enum: ['on', 'off'], default: 'on' },
    unit_auto_off: { type: Number, default: 0 },
    unit_pot_wash_time: { type: Number, default: 0 },
    unit_fountain_time: { type: Number, default: 0 },
    unit_pot_wash_Initial: { type: String, enum: ['on', 'off'], default: 'on' },
    surgicallight_auto: { type: String, enum: ['on', 'off'], default: 'on' },
    surgicallight_descent_time: { type: Number, default: 0 },
    surgicallight_automatic_rise: { type: String, enum: ['on', 'off'], default: 'on' },
    unit_drainage_time: { type: Number, default: 0 },
  },
  {
    timestamps: true,
    versionKey: false,
  }
)

schema.index({ account: 1, memory: 1, staff: 1 })

module.exports = mongoose.model('Record', schema)
